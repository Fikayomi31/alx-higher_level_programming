"""This is the add_integer module"""

>>> add_integer = __import__('0-add_integer').add_integer
>>> # test add two integers

>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(98.3, 2.7)
100

>>> add_integer(4, "School")
Traceback (most recent call last):
	...
TypeError: b must be an integer

>>> add_integer("ALX", "School")
Traceback (most recent call last):
	...
TypeError: a must be an integer

>>> add_integer("ALX")
Traceback (most recent call last):
	...
TypeError: a must be an integer

>>> # Case Overflow
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
	...
OverflowError: cannot convert float infinity to integer

>>> # Case Overflow 
>>> add_integer(float('inf'), float('-inf'))
Traceback (most recent call last):
        ...
OverflowError: cannot convert float infinity to integer

Case NaN 1:
>>> add_integer(0, float('nan'))
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer

Case NaN 2:
>>> add_integer(float('nan'))
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer
