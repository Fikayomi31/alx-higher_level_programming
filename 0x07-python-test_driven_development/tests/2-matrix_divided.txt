>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

1. Correct Usage

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
 
2. float 
>>> matrix = [[1.1, -2.2, 3.3], [4.4, -5.5, 6.6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.37, -0.73, 1.1], [1.47, -1.83, 2.2]]

3. float and interger combine
>>> matrix = [[1.1, 3, 3.3], [4.4, 5.5 -6]]
>>> matrix_divided(matrix 3)
[[0.37, 1, 1.1], [1.47, 1.83, -2]]

invalid Divisible
4. Division by zero

>>> matrix = [[2, 3, 4], [5, 6, 7]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
ZeroDivisionError: division by zero

5. Invalid Division
>>> matrix_divided(matrix, 'div')
Traceback (most recent call last):
TypeError: div must be a number

6. Not a valid matrix

>>> matrix = "not a list"
>>> div = 3
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

7. None matrix
>>> matrix = None
>>> div = 3
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

8. Not a valid matrix
>>> matrix = []
>>> div = 3
>>> matrix_divided(matrix, div)
[]

9. Not a matrix
>>> matrix = [[2, 3, 4], [5, 'not valid', 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

10. Inconsistent row length

>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

11. Not a valid row

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9], 10]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
